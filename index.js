//Imports
const express = require('express')
const app = express() // this has to be here
const server = require('http').createServer(app)
const io = require('socket.io')(server)
const { fork } = require('child_process')

//Create objects
const gps = fork('gps.js');
let gps_data = null

//setup Express
app.get('/', (req, res) => {
	res.sendFile(__dirname + '/index.html')
})

app.get('/chat', (req, res) => {
	res.sendFile(__dirname + '/chat.html')
})

//Starting listening for server
server.listen(3000, () => { console.log('listening on *:3000'); })

//Websocket connection made
io.on('connection', socket => {
	console.log('a user connected(new socket created)')

	socket.on('disconnect', () => console.log('user disconnected'))

	socket.on('chat message', msg => {
		console.log('message: ' + msg)

		//mirror message back to user
		io.emit('chat message', msg)

		if (msg === 'gps off') gps.send(msg)
		if (msg === 'gps on') gps.send(msg)
	})

	//RTCM TEST
	socket.on('rtcm', rtcmData =>{
		console.log('RTCM: ' + rtcmData)
	})
})

//Getting coordinate data from GPS
gps.on('message', data => {

	//update data in local cache
	gps_data = data;

	if (data.error) {
		console.log("error generated by gps process: " + data.error)
	}
})

// Update browser
setInterval(() => {
	io.emit('sensor data', {
		gps: gps_data,
	}
	)
}, 150)


//If process forcely terminanted - clear out
process.on('sigterm', () => {
	app.close()
})
