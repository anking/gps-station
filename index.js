//Imports
const express = require('express');
const app = express(); // this has to be here
const server = require('http').createServer(app);
const io = require('socket.io')(server);
const { fork } = require('child_process');

//Create objects
const gps = fork('gps.js');
//const sonars = fork('adc_sonars.js');
//const lcd = fork('lcd.js');
//const compass = fork('accel.js');
//let lcd_screen ={ln0:'',ln1:'',ln2:'',ln3:''}
let gps_data = null;
//let sonar_data = null;
//let compass_data = null;

//setup Express
app.get('/', (req, res) => {
	//res.send("Index page");
	res.sendFile(__dirname + '/index.html');
})

app.get('/chat', (req, res) => {
	res.sendFile(__dirname + '/chat.html');
})

//Starting listening for server
server.listen(3000,()=>{ console.log('listening on *:3000'); });

//Websocket connection made
io.on('connection', socket => { 
	console.log('a user connected(new socket created)');
	
	socket.on('disconnect', () => {
		console.log('user disconnected');
	});
	socket.on('chat message', msg => {
		console.log('message: ' + msg);
		//mirror message back to user
		io.emit('chat message', msg);
		if(msg === 'gps off') {
			// lcd_screen.ln1="GPS OFF             ";
			// lcd_screen.ln2="                    ";
			gps.send(msg);
		}
		if(msg === 'gps on') gps.send(msg);
	});
});

//Getting coordinate data from GPS
gps.on('message', data => {
	gps_data = data;

	if(data.error){
		console.log("error generated by gps process: " + data.error);
	}
	if(data.lat && data.lon) {
	   // lcd_screen.ln1 = 'lat: '+data.lat+'          ';
	   // lcd_screen.ln2 = 'lon: '+data.lon+'          ';
	}
});

//Getting sonar data
// sonars.on('message', data => {
	// sonar_data = data;
    // lcd_screen.ln0 = 'Channell 0: '+data.CHANNEL_0+'   ';
// });

// Getting compass data
// compass.on('message', data => {
	// compass_data = data;
    // lcd_screen.ln3 = 'Heading: '+data.heading+'     ';
// });

// Update LCD Screen
// setInterval(()=>{
	//output to lcd
	// lcd.send({data: lcd_screen});
// }, 800);

// Update browser
setInterval(()=>{
	io.emit('sensor data', {
		//lcd:lcd_screen,
		gps: gps_data,
		//sonars: sonar_data,
		//compass: compass_data
		}
	);
}, 150);


//If process forcely terminanted - clear out
process.on('sigterm',()=>{
	app.close();
});
