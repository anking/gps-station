//Imports
const express = require('express')
const app = express() // this has to be here
const server = require('http').createServer(app)
const io = require('socket.io')(server)
const { fork } = require('child_process')
const { Console } = require('console')

//Create objects
let gps = null;
let gps_data = null;



//Wrap everything in async function for proper await handling
const main = async () => {

	//Connect gps process
	connectGPS();

	//setup Express
	app.get('/', (req, res) => {
		res.sendFile(__dirname + '/index.html')
	})

	app.get('/chat', (req, res) => {
		res.sendFile(__dirname + '/chat.html')
	})

	//Starting listening for server
	server.listen(3000, () => { console.log('listening on *:3000'); })

	//Websocket connection made
	io.on('connection', socket => {
		console.log('UI user connected(new socket created)')

		socket.on('disconnect', () => console.log('UI user disconnected'))

		socket.on('chat message', msg => {
			console.log('message: ' + msg)

			//mirror message back to user
			io.emit('chat message', msg)

			if (gps && msg === 'gps off') gps.send(msg)
			if (gps && msg === 'gps on') gps.send(msg)
		})

		socket.on('RESTART_SURVEY', params => gps && !gps.killed && gps.send('RESTART_SURVEY:' + params))
		socket.on('RESTART_FIXED', params => gps && !gps.killed && gps.send('RESTART_FIXED:' + params))

		//RTCM TEST
		socket.on('rtcm', rtcmData => {
			console.log('RTCM: ' + rtcmData)
		})
	})

	// Update browser
	setInterval(() => io.emit('sensor data', { gps: gps_data }), 150)

	//If process forcely terminanted - clear out
	process.on('sigterm', () => {
		app.close()
	})

}



const connectGPS = () => {
	gps = fork('gps.js');

	//Getting coordinate data from GPS
	gps.on('message', data => {

		//update data in local cache
		gps_data = data;

		if (data.error) {
			console.log("error generated by gps process: " + data.error)
		}
	})

	//Restarg GPS process if it exits
	gps.on('exit', code => {
		console.log("Gps process exited with code " + code + ". Trying to restart...")

		connectGPS();
	})
}

main();
